version: '3.8'

services:
    database:
        image: postgres:14-alpine
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD} # Set in .env file
            POSTGRES_DB: ${DB_NAME} # Set in .env file
            POSTGRES_USER: ${DB_USERNAME} # Set in .env file
        volumes:
            - db_data:/var/lib/postgresql/data
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]

    backend:
        build: ./tools/devcontainer
        depends_on: ['database']
        volumes:
            - ${PWD}/backend:/app
        ports:
            - 8080:3000
            - 9229:9229
        command: /entrypoint.sh npm run start:debug
        env_file:
            - .env
        healthcheck:
            test: ["CMD-SHELL", "curl --fail http://localhost:3000/health/check"]

    frontend:
        build: ./tools/devcontainer
        depends_on: ['backend']
        volumes:
            - ${PWD}/frontend:/app
        ports:
            - 80:5000
        command: /entrypoint.sh npm run dev
        env_file:
            - .env
        healthcheck:
            test: ["CMD-SHELL", "curl --fail http://localhost:5000/"]

volumes:
    db_data:
